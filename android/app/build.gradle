plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()//deklarasi variabel
def localPropertiesFile = rootProject.file('local.properties')// mengambil file "local.properties" yang terletak di direktori proyek akar (root project) dan menyimpannya dalam variabel 
if (localPropertiesFile.exists()) { //pemeriksaan apakah file dengan nama yang disimpan dalam variabel localPropertiesFile ada atau tidak
    localPropertiesFile.withReader('UTF-8') { reader ->// membuka file localPropertiesFile untuk dibaca dengan encoding UTF-8
        localProperties.load(reader) //membaca isi file dan memuatnya ke dalam objek localProperties
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')//deklarasi variabel flutterVersionCode
if (flutterVersionCode == null) { //mengecek apakah flutterVersionCode memiliki nilai atau null (tidak ada nilai)
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')//deklarasi variabel flutterVersionName
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.ecommerce"//digunakan untuk proyek Flutter saat diintegrasikan dengan platform Android
    compileSdkVersion flutter.compileSdkVersion//variabel yang digunakan untuk mengambil nilai versi SDK Android yang akan digunakan 
    ndkVersion flutter.ndkVersion//variabel yang digunakan untuk mengambil nilai versi NDK (Native Development Kit) yang akan digunakan

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.ecommerce"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
